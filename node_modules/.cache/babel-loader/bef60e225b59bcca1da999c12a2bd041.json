{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\desktop\\\\e-commerce\\\\src\\\\components\\\\CustomButton.js\";\nimport React from \"react\";\nimport styled, { css } from \"styled-components\";\nconst buttonStyles = css`\n  background-color: black;\n  color: white;\n  border: none;\n\n  &:hover {\n    background-color: white;\n    color: black;\n    border: 1px solid black;\n  }\n`;\nconst invertedButtonStyles = css`\n  background-color: white;\n  color: black;\n  border: 1px solid black;\n\n  &:hover {\n    background-color: black;\n    color: white;\n    border: none;\n  }\n`;\nconst googleSignInStyles = css`\n  background-color: #4285f4;\n  color: white;\n\n  &:hover {\n    background-color: #357ae8;\n    border: none;\n  }\n`;\n\nconst getButtonStyles = props => {\n  if (props.isGoogleSignIn) {\n    return googleSignInStyles;\n  }\n\n  return props.inverted ? invertedButtonStyles : buttonStyles;\n};\n\nexport const CustomButtonContainer = styled.button`\n  min-width: 165px;\n  width: auto;\n  height: 50px;\n  letter-spacing: 0.5px;\n  line-height: 50px;\n  padding: 0 35px 0 35px;\n  font-size: 15px;\n  text-transform: uppercase;\n  font-family: \"Open Sans Condensed\";\n  font-weight: bolder;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  ${getButtonStyles}\n`;\n\nconst CustomButton = ({\n  children,\n  ...props\n}) => {\n  return /*#__PURE__*/React.createElement(CustomButtonContainer, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }\n  }), children);\n};\n\nexport default CustomButton;","map":{"version":3,"sources":["C:/Users/lenovo/desktop/e-commerce/src/components/CustomButton.js"],"names":["React","styled","css","buttonStyles","invertedButtonStyles","googleSignInStyles","getButtonStyles","props","isGoogleSignIn","inverted","CustomButtonContainer","button","CustomButton","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,MAAMC,YAAY,GAAGD,GAAI;;;;;;;;;;CAAzB;AAYA,MAAME,oBAAoB,GAAGF,GAAI;;;;;;;;;;CAAjC;AAYA,MAAMG,kBAAkB,GAAGH,GAAI;;;;;;;;CAA/B;;AAUA,MAAMI,eAAe,GAAIC,KAAD,IAAW;AACjC,MAAIA,KAAK,CAACC,cAAV,EAA0B;AACxB,WAAOH,kBAAP;AACD;;AAED,SAAOE,KAAK,CAACE,QAAN,GAAiBL,oBAAjB,GAAwCD,YAA/C;AACD,CAND;;AAQA,OAAO,MAAMO,qBAAqB,GAAGT,MAAM,CAACU,MAAO;;;;;;;;;;;;;;IAc/CL,eAAgB;CAdb;;AAgBP,MAAMM,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGN;AAAf,CAAD,KAA4B;AAC/C,sBAAO,oBAAC,qBAAD,oBAA2BA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAmCM,QAAnC,CAAP;AACD,CAFD;;AAGA,eAAeD,YAAf","sourcesContent":["import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst buttonStyles = css`\r\n  background-color: black;\r\n  color: white;\r\n  border: none;\r\n\r\n  &:hover {\r\n    background-color: white;\r\n    color: black;\r\n    border: 1px solid black;\r\n  }\r\n`;\r\n\r\nconst invertedButtonStyles = css`\r\n  background-color: white;\r\n  color: black;\r\n  border: 1px solid black;\r\n\r\n  &:hover {\r\n    background-color: black;\r\n    color: white;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nconst googleSignInStyles = css`\r\n  background-color: #4285f4;\r\n  color: white;\r\n\r\n  &:hover {\r\n    background-color: #357ae8;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nconst getButtonStyles = (props) => {\r\n  if (props.isGoogleSignIn) {\r\n    return googleSignInStyles;\r\n  }\r\n\r\n  return props.inverted ? invertedButtonStyles : buttonStyles;\r\n};\r\n\r\nexport const CustomButtonContainer = styled.button`\r\n  min-width: 165px;\r\n  width: auto;\r\n  height: 50px;\r\n  letter-spacing: 0.5px;\r\n  line-height: 50px;\r\n  padding: 0 35px 0 35px;\r\n  font-size: 15px;\r\n  text-transform: uppercase;\r\n  font-family: \"Open Sans Condensed\";\r\n  font-weight: bolder;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  ${getButtonStyles}\r\n`;\r\nconst CustomButton = ({ children, ...props }) => {\r\n  return <CustomButtonContainer {...props}>{children}</CustomButtonContainer>;\r\n};\r\nexport default CustomButton;\r\n"]},"metadata":{},"sourceType":"module"}