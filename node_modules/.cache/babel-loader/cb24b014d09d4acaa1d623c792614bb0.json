{"ast":null,"code":"import { call, put, takeLatest, all } from \"redux-saga/effects\";\nimport UserActionTypes from \"./UserType\";\nimport { SignInSuccess, SignInFailure, signOutSuccess, signOutFailure } from \"./UserAction\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../firebase/FireBaseUtils\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    put(signOutFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n\n    if (!userAuth) {\n      return;\n    }\n\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield SignInFailure(error);\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    SignInFailure(error);\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* googleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* emailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(googleSignInStart), call(emailSignInStart), call(onCheckUserSession)]);\n}","map":{"version":3,"sources":["C:/Users/lenovo/desktop/e-commerce/src/redux/User.Sagas.js"],"names":["call","put","takeLatest","all","UserActionTypes","SignInSuccess","SignInFailure","signOutSuccess","signOutFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signOut","isUserAuthenticated","signInWithGoogle","user","signInWithPopup","onSignOutStart","SIGN_OUT_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onCheckUserSession","CHECK_USER_SESSION","googleSignInStart","GOOGLE_SIGN_IN_START","emailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"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","sourcesContent":["import { call, put, takeLatest, all } from \"redux-saga/effects\";\r\nimport UserActionTypes from \"./UserType\";\r\nimport {\r\n  SignInSuccess,\r\n  SignInFailure,\r\n  signOutSuccess,\r\n  signOutFailure,\r\n} from \"./UserAction\";\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n  getCurrentUser,\r\n} from \"../firebase/FireBaseUtils\";\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n  try {\r\n    const userRef = yield call(createUserProfileDocument, userAuth);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(SignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (error) {\r\n    yield put(SignInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signOut() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(signOutSuccess());\r\n  } catch (error) {\r\n    put(signOutFailure(error));\r\n  }\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n  try {\r\n    const userAuth = yield getCurrentUser();\r\n    if (!userAuth) {\r\n      return;\r\n    }\r\n    yield getSnapshotFromUserAuth(userAuth);\r\n  } catch (error) {\r\n    yield put(SignInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    yield SignInFailure(error);\r\n  }\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n  yield takeLatest(UserActionTypes.SIGN_OUT_START);\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    SignInFailure(error);\r\n  }\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* googleSignInStart() {\r\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* emailSignInStart() {\r\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(googleSignInStart),\r\n    call(emailSignInStart),\r\n    call(onCheckUserSession),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}